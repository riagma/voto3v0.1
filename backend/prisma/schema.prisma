// prisma/schema.prisma

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Votante {
  id              String                        @id @default(uuid())
  nombre          String
  primerApellido  String
  segundoApellido String
  dni             String                        @unique
  correo          String?                       @unique
  hashContrasena  String?                        
  registradoEn    DateTime                      @default(now())

  registros       RegistroVotanteEleccion[]
}

model Eleccion {
  id             String                         @id @default(uuid())
  nombre         String
  fechaInicio    DateTime
  fechaFin       DateTime
  estado         String                         // Ej. "borrador" | "abierta" | "cerrada"

  presentaciones PartidoEleccion[] 
  registros      RegistroVotanteEleccion[]    // Votantes inscritos
}

model Partido {
  id             String                         @id @default(uuid())
  nombre         String                         @unique
  siglas         String                         @unique
  logoUrl        String?

  presentaciones PartidoEleccion[]            // Elecciones en las que participa
}

/// Tabla intermedia Partidos ↔ Elecciones
model PartidoEleccion {
  id           String      @id @default(uuid())
  partido      Partido     @relation(fields: [partidoId], references: [id], onDelete: Cascade)
  partidoId    String
  eleccion     Eleccion    @relation(fields: [eleccionId], references: [id], onDelete: Cascade)
  eleccionId   String

  @@unique([partidoId, eleccionId])
}

/// Registro de qué votante está habilitado para cada elección
model RegistroVotanteEleccion {
  id             String       @id @default(uuid())
  votante        Votante      @relation(fields: [votanteId], references: [id], onDelete: Cascade)
  votanteId      String
  eleccion       Eleccion     @relation(fields: [eleccionId], references: [id], onDelete: Cascade)
  eleccionId     String
  fechaRegistro  DateTime     @default(now())

  @@unique([votanteId, eleccionId])
}
