// prisma/schema.prisma

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

model Votante {
  dni               String        @id
  nombre            String
  primerApellido    String
  segundoApellido   String
  correoElectronico String?       @unique
  hashContrasena    String?                        

  registros         RegistroVotanteEleccion[]
}

model Eleccion {
  id                  Int         @id @default(autoincrement())
  nombre              String      @unique
  fechaInicioRegistro DateTime
  fechaFinRegistro    DateTime
  fechaInicioVotacion DateTime
  fechaFinVotacion    DateTime
  fechaCelebracion    DateTime
  estado              String

  presentaciones      PartidoEleccion[] 
  registros           RegistroVotanteEleccion[]
  resultado           ResultadoEleccion?
}

model Partido {
  siglas         String        @id
  nombre         String        @unique
  descripcion    String

  presentaciones PartidoEleccion[]
  resultados     ResultadoPartido[]
}

model PartidoEleccion {
  partido      Partido     @relation(fields: [partidoId], references: [siglas], onDelete: Cascade)
  partidoId    String      
  eleccion     Eleccion    @relation(fields: [eleccionId], references: [id], onDelete: Cascade)
  eleccionId   Int

  @@id([partidoId, eleccionId]) 
}

model RegistroVotanteEleccion {
  
  votante        Votante      @relation(fields: [votanteId], references: [dni], onDelete: Cascade)
  votanteId      String      
  eleccion       Eleccion     @relation(fields: [eleccionId], references: [id], onDelete: Cascade)
  eleccionId     Int
  compromiso     String     
  transaccion    String
  fechaRegistro  DateTime     @default(now())
  datosPrivados  String?

  @@id([votanteId, eleccionId])
  @@index([eleccionId])
}

model ResultadoEleccion {
  eleccion           Eleccion    @relation(fields: [eleccionId], references: [id], onDelete: Cascade)
  eleccionId         Int         @id
  censados           Int         @default(0)
  votantes           Int         @default(0)
  abstenciones       Int         @default(0)
  votosBlancos       Int         @default(0)
  votosNulos         Int         @default(0)
  fechaRecuento      DateTime    @default(now())
  
  resultadosPartidos ResultadoPartido[]
}

model ResultadoPartido {
  partido         Partido           @relation(fields: [partidoId], references: [siglas], onDelete: Cascade)
  partidoId       String
  resultado       ResultadoEleccion @relation(fields: [eleccionId], references: [eleccionId], onDelete: Cascade)
  eleccionId      Int
  votos           Int               @default(0)
  porcentaje      Float             @default(0)

  @@id([partidoId, eleccionId])
}

/// Credenciales de acceso del administrador
model Administrador {
  correo          String      @id
  hashContrasena  String                              
}
